
message AudioFileInfoDto {
   required int32 FileId = 1;
   required string Caption = 2;
   required uint32 LengthInSeconds = 3;
   required string Format = 4;
   required uint32 LengthInBytes = 5;
   required double Volume = 6;
   optional bool IsOwned = 7;
}
message AudioFileStateDto {
   required int32 FileId = 1;
   required double Volume = 2;
}
message BounceCounterRqDto {
}
message BounceCounterRsDto {
   required bool IsSuccess = 1;
   repeated DtoValidationError ErrorList = 2;
   optional int32 Value = 3;
}
message CartOfferRqDto {
   optional int32 ReferralId = 1 [default = 0];
   repeated ProductInfoProto Products = 2;
}
message CartOfferRsDto {
   required bool IsSuccess = 1;
   repeated DtoValidationError ErrorList = 2;
   required MarketingProgramProto Offer = 3;
   required uint32 BaseTotalPrice = 4;
   required uint32 DiscountedTotalPrice = 5;
   required uint32 TotalDiscount = 6;
}
message CreateAudioFileRqDto {
   required AudioFileInfoDto FileInfo = 1;
}
message CreateAudioFileRsDto {
   required bool IsSuccess = 1;
   repeated DtoValidationError ErrorList = 2;
   optional AudioFileInfoDto FileInfo = 3;
}
message DtoValidationError {
   optional string Error = 1;
   repeated string FieldList = 2;
}
message MarketingProgramProto {
   required string Id = 1;
   repeated ProductOfferProto ProductList = 2;
   optional int32 ReferralId = 3 [default = 0];
}

message ProductInfoProto {
   required string Id = 1;
   optional uint32 Price = 2;
}
message ProductOfferProto {
   required ProductInfoProto Product = 1;
   optional uint32 CutOffPercent = 2;
   optional uint32 CutOffFlat = 3;
}
message SandboxStateDto {
   required int32 BackgroundAudioFileId = 3;
   required int32 FxAudioFileId = 4;
   repeated AudioFileInfoDto FileList = 5;
   required int32 PresetFileId = 6;
}
message SandboxStateRqDto {
   required string SandboxHash = 1;
}
message SandboxStateRsDto {
   required bool IsSuccess = 1;
   repeated DtoValidationError ErrorList = 2;
   optional SandboxStateDto State = 3;
}
message ShareSandboxRqDto {
   required AudioFileStateDto BackgroundFile = 1;
   required AudioFileStateDto FxFile = 2;
}
message ShareSandboxRsDto {
   required bool IsSuccess = 1;
   repeated DtoValidationError ErrorList = 2;
   required string HashForLink = 3;
   required int32 PresetFileId = 4;
}
message StorageLimitsRqDto {
}
message StorageLimitsRsDto {
   required bool IsSuccess = 1;
   repeated DtoValidationError ErrorList = 2;
   optional uint32 SpaceUsedInBytes = 3;
   optional uint32 SpaceLeftInBytes = 4;
   optional uint32 SpaceTotalInBytes = 5;
}

